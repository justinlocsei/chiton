(function($, _) {

window.Wintour = window.Wintour || {};

var TEMPLATES = {};

/**
 * Render a template
 *
 * @param {string} id The ID of the template
 * @param {object} context The context for rendering
 * @returns {string} The rendered output
 */
function renderTemplate(id, context) {
    var template = TEMPLATES[id];
    if (!template) {
        template = _.template($('#' + id).html());
        TEMPLATES[id] = template;
    }

    return template(context);
};

/**
 * A visualizer for a recommendation pipeline
 *
 * @param {object} $root The jQuery-wrapped root element
 */
function PipelineVisualizer($root) {
    this.$el = $root;
    this.$results = $root.find('.js-pipeline-data');
}

PipelineVisualizer.prototype = {

    /**
     * Recalculate the recommendations based on the current profile form
     */
    recalculate: function() {

    },

    /**
     * Visualize the recommendations generated by the pipeline
     *
     * @param {object} recommendations The raw data for the recommendations
     */
    visualize: function(recommendations) {
        var context = {};

        var basics = _.map(recommendations, function(data, basicSlug) {
            var garments = _.map(data.garments, function(garment) {
                return renderTemplate('pipeline-template-garment', {
                    brand: garment.garment.brand,
                    name: garment.garment.name,
                    weight: garment.weight
                });
            });

            var basic = data.basic;

            return {
                garments: garments,
                name: basic.name
            }
        });

        context.basics = _.sortBy(basics, function(basic) {
            return basic.name;
        });

        var output = renderTemplate('pipeline-template-basics', context);
        this.$results.html(output);
    }

};

/**
 * Create a new pipeline
 *
 * @param {object} options Options for creating the pipeline
 * @param {object} options.recommendations Raw data describing pre-generated recommendations
 * @param {object,string} options.root The root DOM element for the visualizer
 * @returns {Pipeline}
 */
window.Wintour.pipeline = function pipeline(options) {
    var settings = $.extend({
        recommendations: null,
        root: null
    }, options || {});

    var pipeline = new PipelineVisualizer($(settings.root));
    if (settings.recommendations) {
        pipeline.visualize(settings.recommendations);
    }

    return pipeline;
}

})(window.jQuery, window._);
